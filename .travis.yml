language: generic
os:
- linux
- osx
env:
  matrix:
  - CONDA_ENV=3.7
  - CONDA_ENV=3.6
  global:
  - MPLBACKEND=Agg
  - secure: exvIFiQjIunvyGXJB27wUskWoXOL/qgu1tLjpgSopZz34WRK7kszqD0fPBLpX7wWgvBuUPYt9tXjdj80gXsouhW/R44AxauRpeAvrcodOwKpFIKM5DOyLmBs+YHQvS1UDJ/n8Lr+n6Q0H36l3pwZC269UKQkpwDwUuGkobeMqXQ=
sudo: false
jobs:
  include:
  - stage: lint
    os: linux
    script:
    - pip install flake8
    - make lint

  - stage: docs
    os: linux
    install:
    - conda env create --file docs/environment.yml
    - conda activate landlab_docs
    - pip install -e .
    script:
    - make -C docs clean html linkcheck

  - &deploy
    stage: deploy
    if: tag =~ v.*$
    os: osx
    env: CONDA_ENV=3.7
    script:
    - pip install twine wheel
    - python setup.py bdist_wheel
    - twine upload -u landlab -p$PYPI_PASS dist/*landlab*
  - <<: *deploy
    os: osx
    env: CONDA_ENV=3.6

  - <<: *deploy
    sudo: required
    os: linux
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
         PLAT=manylinux1_x86_64
         CONDA_ENV=3.7
    install:
    - docker pull $DOCKER_IMAGE
    script:
    - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE /io/.ci/travis/build_wheels.sh
    - ls wheelhouse/
    - pip install twine
    - twine upload -u landlab -p$PYPI_PASS wheelhouse/*landlab*manylinux*

before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  mkdir -p $HOME/.matplotlib
  echo "backend: Agg" > $HOME/.matplotlib/matplotlibrc
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $(pwd)/anaconda
- export PATH="$(pwd)/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda create -n test_env python=$CONDA_ENV
- source activate test_env
- conda info -a && conda list
install:
- pip install numpy
- pip install -e .
script:
- pip install -r requirements-testing.txt -r requirements-notebooks.txt
- pytest --cov=landlab --cov-report=xml:$(pwd)/coverage.xml --run-notebook -vvv
after_success: coveralls
